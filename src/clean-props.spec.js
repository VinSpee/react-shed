import cleanProps from './clean-props';

describe('cleans props', () => {
  it('should remove shed props from final component output', () => {
    const actual = cleanProps({
      data: 'foo',
      ac: 'alignContent',
      ai: 'alignItems',
      as: 'alignSelf',
      bg: 'backgroundColor',
      bottom: 'bottom',
      br: 'borderRadius',
      brb: 'foo',
      brbl: 'borderRadiusBottomLeft',
      brbr: 'borderRadiusBottomRight',
      brl: 'borderRadiusBottomLeft',
      brr: 'borderRadiusBottomRight',
      brt: 'borderRadiusTopRight',
      brtl: 'borderRadiusTopLeft',
      brtr: 'borderRadiusTopRight',
      brx: 'borderRadiusLeft',
      bry: 'borderRadiusTop',
      c: 'color',
      cur: 'cursor',
      d: 'display',
      f: 'fontSize',
      ff: 'fontFamily',
      fl: 'float',
      flxb: 'flexBasis',
      flxd: 'flexDirection',
      flxg: 'flexGrow',
      flxs: 'flexShrink',
      flxw: 'flexWrap',
      fs: 'fontSize',
      fw: 'fontWeight',
      h: 'height',
      jc: 'justifyContent',
      left: 'left',
      lh: 'lineHeight',
      ls: 'letterSpacing',
      lst: 'listStyleType',
      m: 'margin',
      mb: 'marginBottom',
      ml: 'marginLeft',
      mr: 'marginRight',
      mt: 'marginTop',
      mx: 'marginLeft',
      my: 'marginTop',
      o: 'overflow',
      op: 'opacity',
      ox: 'overflowX',
      oy: 'overflowY',
      p: 'padding',
      pb: 'paddingBottom',
      pl: 'paddingLeft',
      pos: 'position',
      pr: 'paddingRight',
      pt: 'paddingTop',
      px: 'paddingRight',
      py: 'paddingTop',
      right: 'right',
      ta: 'textAlign',
      td: 'textDecoration',
      tdc: 'textDecorationColor',
      top: 'top',
      tt: 'textTransform',
      va: 'verticalAlign',
      w: 'width',
      ws: 'whiteSpace',
      zi: 'zIndex',
    });
    const expected = {
      data: 'foo',
    };
    expect(actual).toEqual(expected);
  });
});
